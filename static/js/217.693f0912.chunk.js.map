{"version":3,"file":"static/js/217.693f0912.chunk.js","mappings":"+QAiCA,EA5B2B,WAAO,IAADA,EAAAC,EAC/BC,GAAwCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA/CI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GACpCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GACtBG,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GACZ,IAAMI,GAAWC,EAAAA,EAAAA,QAA2B,QAArBnB,EAAe,QAAfC,EAACa,EAASM,aAAK,IAAAnB,OAAA,EAAdA,EAAgBoB,YAAI,IAAArB,EAAAA,EAAI,KAmBhD,OAlBAgB,QAAQC,IAAIC,IAEZI,EAAAA,EAAAA,YAAU,WACR,GAAKV,EAAL,CACA,IAAMW,EAAiB,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEH,OAFGF,EAAAC,KAAA,EAEtBnB,GAAa,GAAMkB,EAAAE,KAAA,GACIC,EAAAA,EAAAA,IAAgBpB,GAAS,KAAD,EAAzCgB,EAAQC,EAAAI,KACd1B,EAAgBqB,GAAUC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,UAE1BM,EAAAA,EAAAA,IAAQN,EAAAK,GAAME,SAAS,QAEH,OAFGP,EAAAC,KAAA,GAEvBnB,GAAa,GAAOkB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAX,EAAA,wBAEvB,kBAVsB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAWvBjB,GAZoB,CAatB,GAAG,CAACX,IAEG,CAAEN,aAAAA,EAAcI,UAAAA,EAAWQ,SAAAA,EACpC,E,QC9BA,EAA4B,gCAA5B,EAAwE,gCAAxE,EAAgH,4BAAhH,EAA6J,qCAA7J,EAA2M,6BAA3M,EAA2P,uCAA3P,EAAiT,mCAAjT,EAA8V,8BAA9V,EAA4Y,oCAA5Y,EAAkc,wEAAlc,EAA0hB,sEAA1hB,EAAgnB,sEAAhnB,EAA2sB,2EAA3sB,EAAyyB,uCAAzyB,EAAg2B,oCAAh2B,EAA84B,4DAA94B,EAAu9B,+D,SCMj9BuB,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,4BAAyB,IAC3CC,GAAUD,EAAAA,EAAAA,OAAK,kBAAM,4BAA+B,IA0E1D,EAxEqB,WACnB,IAAAE,EAA8CC,IAAtCvC,EAAYsC,EAAZtC,aAAcI,EAASkC,EAATlC,UAAWQ,EAAQ0B,EAAR1B,SAEjC,OACE4B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAcC,SAAA,CAC3BvC,IAAawC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,KACrBD,EAAAA,EAAAA,KAACE,EAAAA,GAAI,CAACL,UAAWC,EAAeK,GAAInC,EAASoC,QAAQL,SAAC,YAGpC,OAAjB3C,IACCwC,EAAAA,EAAAA,MAAA,OAAAG,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAUC,SAAE3C,EAAaiD,SACxCT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EACjCC,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXQ,IACElD,EAAamD,YAAW,mCAAAC,OACepD,EAAamD,aAChDE,EAENC,IAAKtD,EAAaiD,SAEpBT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAAE3C,EAAaiD,SAC/CT,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAkBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,WAC7B3C,EAAauD,iBAEhBf,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAuBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,iBAC7B3C,EAAawD,iBAEhBhB,EAAAA,EAAAA,MAAA,MAAIC,UAAWC,EAAkBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,WAC7B3C,EAAayD,OAAOC,KAAI,SAAAC,GACvB,OAAOf,EAAAA,EAAAA,KAAA,MAAAD,SAAmBgB,EAAKC,MAAfD,EAAKE,GACvB,QAGFrB,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAoBC,SAAA,EAChCC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,aAC7B3C,EAAa8D,aAEhBtB,EAAAA,EAAAA,MAAA,KAAGC,UAAWC,EAAkBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,QAAMH,UAAWC,EAAYC,SAAC,WAC7B3C,EAAa+D,OAAO,cAI3BvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqBC,SAAA,EACnCC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAiBC,SAAC,4BACjCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkBC,SAAA,EAChCC,EAAAA,EAAAA,KAACoB,EAAAA,GAAO,CAACvB,UAAWC,EAAaK,GAAG,OAAMJ,SAAC,UAG3CC,EAAAA,EAAAA,KAACoB,EAAAA,GAAO,CAACvB,UAAWC,EAAgBK,GAAG,UAASJ,SAAC,mBAKrDC,EAAAA,EAAAA,KAACqB,EAAAA,SAAQ,CAACC,UAAUtB,EAAAA,EAAAA,KAACC,EAAAA,EAAM,IAAIF,UAC7BH,EAAAA,EAAAA,MAAC2B,EAAAA,GAAM,CAAAxB,SAAA,EACLC,EAAAA,EAAAA,KAACwB,EAAAA,GAAK,CAACC,KAAK,OAAOC,SAAS1B,EAAAA,EAAAA,KAACT,EAAI,OACjCS,EAAAA,EAAAA,KAACwB,EAAAA,GAAK,CAACC,KAAK,UAAUC,SAAS1B,EAAAA,EAAAA,KAACP,EAAO,gBAOrD,C,uMCxEMkC,EAAiB,eAAArD,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAmD,EAAAC,EAAA,OAAArD,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACDiD,EAAAA,EAAAA,IAAU,GAADtB,OAC3BuB,EAAAA,GAAAA,IAAU,+BAAAvB,OAA8BuB,EAAAA,GAAAA,MAC3C,KAAD,EAFW,OAEXH,EAAAjD,EAAAI,KAFO8C,EAAID,EAAJC,KAAIlD,EAAAqD,OAAA,SAGLH,GAAI,wBAAAlD,EAAAS,OAAA,GAAAX,EAAA,KACZ,kBALsB,OAAAH,EAAAe,MAAA,KAAAC,UAAA,KAajBR,EAAe,eAAAmD,GAAA1D,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA0D,EAAMC,GAAQ,IAAAC,EAAAP,EAAA,OAAArD,IAAAA,MAAA,SAAA6D,GAAA,cAAAA,EAAAzD,KAAAyD,EAAAxD,MAAA,cAAAwD,EAAAxD,KAAA,EACbiD,EAAAA,EAAAA,IAAU,GAADtB,OAC3BuB,EAAAA,GAAAA,IAAU,UAAAvB,OAAS2B,EAAQ,aAAA3B,OAAYuB,EAAAA,GAAAA,MAC1C,KAAD,EAFW,OAEXK,EAAAC,EAAAtD,KAFO8C,EAAIO,EAAJP,KAAIQ,EAAAL,OAAA,SAGLH,GAAI,wBAAAQ,EAAAjD,OAAA,GAAA8C,EAAA,KACZ,gBALoBI,GAAA,OAAAL,EAAA5C,MAAA,KAAAC,UAAA,KAafiD,EAAe,eAAAC,GAAAjE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAiE,EAAMN,GAAQ,IAAAO,EAAAb,EAAA,OAAArD,IAAAA,MAAA,SAAAmE,GAAA,cAAAA,EAAA/D,KAAA+D,EAAA9D,MAAA,cAAA8D,EAAA9D,KAAA,EACbiD,EAAAA,EAAAA,IAAU,GAADtB,OAC3BuB,EAAAA,GAAAA,IAAU,UAAAvB,OAAS2B,EAAQ,qBAAA3B,OAAoBuB,EAAAA,GAAAA,MAClD,KAAD,EAFW,OAEXW,EAAAC,EAAA5D,KAFO8C,EAAIa,EAAJb,KAAIc,EAAAX,OAAA,SAGLH,GAAI,wBAAAc,EAAAvD,OAAA,GAAAqD,EAAA,KACZ,gBALoBG,GAAA,OAAAJ,EAAAnD,MAAA,KAAAC,UAAA,KAafuD,EAAe,eAAAC,GAAAvE,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAuE,EAAMZ,GAAQ,IAAAa,EAAAnB,EAAA,OAAArD,IAAAA,MAAA,SAAAyE,GAAA,cAAAA,EAAArE,KAAAqE,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EACbiD,EAAAA,EAAAA,IAAU,GAADtB,OAC3BuB,EAAAA,GAAAA,IAAU,UAAAvB,OAAS2B,EAAQ,qBAAA3B,OAAoBuB,EAAAA,GAAAA,MAClD,KAAD,EAFW,OAEXiB,EAAAC,EAAAlE,KAFO8C,EAAImB,EAAJnB,KAAIoB,EAAAjB,OAAA,SAGLH,GAAI,wBAAAoB,EAAA7D,OAAA,GAAA2D,EAAA,KACZ,gBALoBG,GAAA,OAAAJ,EAAAzD,MAAA,KAAAC,UAAA,KAaf6D,EAAS,eAAAC,GAAA7E,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAA6E,EAAMC,GAAY,IAAAC,EAAA1B,EAAA,OAAArD,IAAAA,MAAA,SAAAgF,GAAA,cAAAA,EAAA5E,KAAA4E,EAAA3E,MAAA,cAAA2E,EAAA3E,KAAA,EACXiD,EAAAA,EAAAA,IAAU,GAADtB,OAC3BuB,EAAAA,GAAAA,IAAU,yBAAAvB,OAAwBuB,EAAAA,GAAAA,IAAU,WAAAvB,OAAU8C,EAAY,yBACrE,KAAD,EAFW,OAEXC,EAAAC,EAAAzE,KAFO8C,EAAI0B,EAAJ1B,KAAI2B,EAAAxB,OAAA,SAGLH,GAAI,wBAAA2B,EAAApE,OAAA,GAAAiE,EAAA,KACZ,gBALcI,GAAA,OAAAL,EAAA/D,MAAA,KAAAC,UAAA,I,mHCrDf,KALe,CACboE,IAAK,gCACLC,IAAK,oCAUA,IAAM1E,EAAU,SAAA2E,GACrBC,EAAAA,OAAAA,QAAe,mCAADrD,OAAoCoD,GAAS,CACzDE,MAAO,QACPC,oBAAoB,EACpBC,SAAU,gBACVC,QAAS,IACTC,SAAU,OACVC,aAAc,MACdC,kBAAmB,YAEvB,EAMaC,EAAe,WAU1B,OATAR,EAAAA,OAAAA,QAAe,sDAAuD,CACpEC,MAAO,QACPC,oBAAoB,EACpBC,SAAU,gBACVC,QAAS,IACTC,SAAU,OACVC,aAAc,MACdC,kBAAmB,aAEd,EACT,EAOaE,EAAgB,SAAC5F,EAAU6F,GACtC,GAA+B,IAA3B7F,EAAS8F,cAgBX,OAfAX,EAAAA,OAAAA,QACE,2EACA,CACEC,MAAO,QACPC,oBAAoB,EACpBC,SAAU,gBACVC,QAAS,IACTC,SAAU,OACVC,aAAc,MACdC,kBAAmB,kBAGvBG,EAAU,CACRE,MAAO,IAIb,C","sources":["hooks/useGetMovieDetails.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js","services/utils.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport { useLocation, useParams } from 'react-router-dom';\nimport { getMovieDetails } from 'services/api';\nimport { onError } from 'services/utils';\n\nconst useGetMovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [isLoading, setIsloading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  console.log(location);\n  const backLink = useRef(location.state?.from ?? '/');\n  console.log(backLink);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchMovieDetails = async () => {\n      try {\n        setIsloading(true);\n        const response = await getMovieDetails(movieId);\n        setMovieDetails(response);\n      } catch (error) {\n        onError(error.message);\n      } finally {\n        setIsloading(false);\n      }\n    };\n    fetchMovieDetails();\n  }, [movieId]);\n\n  return { movieDetails, isLoading, backLink };\n};\n\nexport default useGetMovieDetails;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetails_container__Ys+c9\",\"goBackBtn\":\"MovieDetails_goBackBtn__WL+X0\",\"title\":\"MovieDetails_title__cUGs9\",\"movieContainer\":\"MovieDetails_movieContainer__ilr3m\",\"poster\":\"MovieDetails_poster__yO7gD\",\"detailsContainer\":\"MovieDetails_detailsContainer__Y0Fjr\",\"detailsTitle\":\"MovieDetails_detailsTitle__aL4kz\",\"details\":\"MovieDetails_details__TGlfg\",\"detailsRating\":\"MovieDetails_detailsRating__KxfpS\",\"detailsOverview\":\"MovieDetails_detailsOverview__Aejeu MovieDetails_detailsRating__KxfpS\",\"detailsGenres\":\"MovieDetails_detailsGenres__zxjb0 MovieDetails_detailsRating__KxfpS\",\"detailsBudget\":\"MovieDetails_detailsBudget__tFUUo MovieDetails_detailsRating__KxfpS\",\"detailsReleaseDate\":\"MovieDetails_detailsReleaseDate__L4Vuf MovieDetails_detailsRating__KxfpS\",\"addInfoContainer\":\"MovieDetails_addInfoContainer__Rsjvd\",\"linkContainer\":\"MovieDetails_linkContainer__MEWoT\",\"castBtn\":\"MovieDetails_castBtn__kiiZI MovieDetails_goBackBtn__WL+X0\",\"reviewsBtn\":\"MovieDetails_reviewsBtn__MThBi MovieDetails_goBackBtn__WL+X0\"};","import React, { Suspense, lazy } from 'react';\nimport { Link, NavLink, Route, Routes } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport useGetMovieDetails from 'hooks/useGetMovieDetails';\nimport coming_soon from '../../images/coming_soon.jpg';\nimport css from './MovieDetails.module.css';\n\nconst Cast = lazy(() => import('pages/Cast/Cast'));\nconst Reviews = lazy(() => import('pages/Reviews/Reviews'));\n\nconst MovieDetails = () => {\n  const { movieDetails, isLoading, backLink } = useGetMovieDetails();\n\n  return (\n    <div className={css.container}>\n      {isLoading && <Loader />}\n      <Link className={css.goBackBtn} to={backLink.current}>\n        Go back\n      </Link>\n      {movieDetails !== null && (\n        <div>\n          <h1 className={css.title}>{movieDetails.title}</h1>\n          <div className={css.movieContainer}>\n            <img\n              className={css.poster}\n              src={\n                movieDetails.poster_path\n                  ? `https://image.tmdb.org/t/p/w300/${movieDetails.poster_path}`\n                  : coming_soon\n              }\n              alt={movieDetails.title}\n            />\n            <div className={css.detailsContainer}>\n              <h2 className={css.detailsTitle}>{movieDetails.title}</h2>\n              <p className={css.detailsRating}>\n                <span className={css.details}>Rating</span>\n                {movieDetails.vote_average}\n              </p>\n              <p className={css.detailsReleaseDate}>\n                <span className={css.details}>Release date</span>\n                {movieDetails.release_date}\n              </p>\n              <ul className={css.detailsGenres}>\n                <span className={css.details}>Genres</span>\n                {movieDetails.genres.map(item => {\n                  return <li key={item.id}>{item.name}</li>;\n                })}\n              </ul>\n\n              <p className={css.detailsOverview}>\n                <span className={css.details}>Overview</span>\n                {movieDetails.overview}\n              </p>\n              <p className={css.detailsBudget}>\n                <span className={css.details}>Budget</span>\n                {movieDetails.budget}$\n              </p>\n            </div>\n          </div>\n          <div className={css.addInfoContainer}>\n            <h2 className={css.detailsTitle}>Additional information</h2>\n            <div className={css.linkContainer}>\n              <NavLink className={css.castBtn} to=\"cast\">\n                Cast\n              </NavLink>\n              <NavLink className={css.reviewsBtn} to=\"reviews\">\n                Reviews\n              </NavLink>\n            </div>\n          </div>\n          <Suspense fallback={<Loader />}>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </Suspense>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nimport params from './utils.js';\n\n/**\n *  Gets trending movies from server\n * @function getTrendingMovies\n * @returns {Promise} Promise\n */\nconst getTrendingMovies = async () => {\n  const { data } = await axios.get(\n    `${params.url}trending/movie/day?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets movie details from server\n * @function getMovieDetails\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieDetails = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets cast information for a movie page\n * @function getMovieCredits\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieCredits = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/credits?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovieReviews\n * @param {number} id\n * @returns {Promise} Promise\n */\nconst getMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${params.url}movie/${movie_id}/reviews?api_key=${params.key}`\n  );\n  return data;\n};\n\n/**\n *  Gets reviews for a movie page\n * @function getMovies\n * @param {string} search_query\n * @returns {Promise} Promise\n */\nconst getMovies = async search_query => {\n  const { data } = await axios.get(\n    `${params.url}search/movie?api_key=${params.key}&query=${search_query}&include_adult=false`\n  );\n  return data;\n};\n\nexport {\n  getTrendingMovies,\n  getMovieDetails,\n  getMovieCredits,\n  getMovieReviews,\n  getMovies,\n};\n","import { Notify } from 'notiflix';\n\nconst params = {\n  url: 'https://api.themoviedb.org/3/',\n  key: '7bade8181fde7cd628993717c20b9542',\n};\n\nexport default params;\n\n/**\n * Shows a message in case of an error\n *@function onError\n * @param {string} error\n */\nexport const onError = error => {\n  Notify.failure(`Please, try again later. Error: ${error}`, {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 3000,\n    fontSize: '13px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n};\n\n/**\n * Shows a message if the input field is empty\n *@function onInputEmpty\n */\nexport const onInputEmpty = () => {\n  Notify.failure('The search field cannot be empty, please try again.', {\n    width: '280px',\n    showOnlyTheLastOne: true,\n    position: 'center-center',\n    timeout: 2000,\n    fontSize: '15px',\n    borderRadius: '8px',\n    cssAnimationStyle: 'from-top',\n  });\n  return '';\n};\n\n/**\n * Checks server response, shows message\n *@function checkResponse\n * @param {promise} response\n */\nexport const checkResponse = (response, setSearch) => {\n  if (response.total_results === 0) {\n    Notify.failure(\n      'Sorry, there are no movies matching your search query. Please try again.',\n      {\n        width: '260px',\n        showOnlyTheLastOne: true,\n        position: 'center-center',\n        timeout: 2000,\n        fontSize: '15px',\n        borderRadius: '8px',\n        cssAnimationStyle: 'from-top',\n      }\n    );\n    setSearch({\n      query: '',\n    });\n    return;\n  }\n};\n"],"names":["_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","isLoading","setIsloading","movieId","useParams","location","useLocation","console","log","backLink","useRef","state","from","useEffect","fetchMovieDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMovieDetails","sent","t0","onError","message","finish","stop","apply","arguments","Cast","lazy","Reviews","_useGetMovieDetails","useGetMovieDetails","_jsxs","className","css","children","_jsx","Loader","Link","to","current","title","src","poster_path","concat","coming_soon","alt","vote_average","release_date","genres","map","item","name","id","overview","budget","NavLink","Suspense","fallback","Routes","Route","path","element","getTrendingMovies","_yield$axios$get","data","axios","params","abrupt","_ref2","_callee2","movie_id","_yield$axios$get2","_context2","_x","getMovieCredits","_ref3","_callee3","_yield$axios$get3","_context3","_x2","getMovieReviews","_ref4","_callee4","_yield$axios$get4","_context4","_x3","getMovies","_ref5","_callee5","search_query","_yield$axios$get5","_context5","_x4","url","key","error","Notify","width","showOnlyTheLastOne","position","timeout","fontSize","borderRadius","cssAnimationStyle","onInputEmpty","checkResponse","setSearch","total_results","query"],"sourceRoot":""}